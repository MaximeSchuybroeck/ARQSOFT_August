@startuml
title OAuth Login â€“ Components & Flow (Phase 1)

skinparam componentStyle rectangle
skinparam shadowing false

package "Frontend" {
  [React App] as FE
}

package "Spring Security (App)" {
  [Security Filter Chain] as SFC
  [OAuth2 Client] as OAuthClient
  [OAuthAuthenticationSuccessHandler] as Handler
  [JwtEncoder] as JWT
  [UserViewMapper] as Mapper
  [UserRepository] as Repo
}

package "External IAM Providers" {
  [GitHub OAuth] as GitHub
  [Facebook OAuth] as Facebook
}

' --- Browser initiates OAuth2 flow ---
FE --> SFC : /oauth2/authorization/GitHub|facebook
SFC --> OAuthClient : start OAuth2 login
OAuthClient --> GitHub : Auth request (redirect)
OAuthClient --> Facebook : Auth request (redirect)

' --- Callback with authorization code + token exchange ---
GitHub --> OAuthClient : id token / user info (email, name)
Facebook --> OAuthClient : id token / user info (email, name)

' --- Success handling ---
OAuthClient --> Handler : onAuthenticationSuccess(authentication)

Handler --> Repo : exists/find & (optional) save user
Handler --> JWT : encode(claims: issuer, subject=id,username, roles, exp)
Handler --> Mapper : map User -> UserView

' ====== Variant A (custom success handler wired) ======
Handler --> FE : JSON { token, id, userName, fullName }

' ====== Variant B (default success handler; if NOT wired) ======
' note right of OAuthClient
'   If no custom successHandler is configured in SecurityConfig,
'   Spring uses default success behavior (redirect to a success URL).
' end note
' OAuthClient --> FE : 302 Redirect (default success URL)

@enduml
