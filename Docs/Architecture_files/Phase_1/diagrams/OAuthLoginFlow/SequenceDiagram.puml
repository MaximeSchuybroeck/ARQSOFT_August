@startuml
actor User

participant "Spring Security" as Security
participant "OAuthAuthenticationSuccessHandler" as Handler
participant "UserRepository" as Repo
participant "JwtEncoder" as Jwt
participant "UserViewMapper" as Mapper
participant "HttpServletResponse" as Response

User -> Security : OAuth2 login (Facebook/GitHub)
Security -> Handler : onAuthenticationSuccess(authentication)

Handler -> Handler : extract provider, email, name
alt Missing email or name
  Handler -> Response : sendError(400, "Missing required user attributes")
  return
end

Handler -> Repo : existsByUsername(email)
Repo --> Handler : boolean
alt user not found
  Handler -> Repo : save(new User{ username=email, name, iamProvider, defaultPassword })
end

Handler -> Repo : findByUsername(email)
Repo --> Handler : User

Handler -> Security : getAuthorities() (roles)
Handler -> Jwt : encode(claims: issuer="example.io", subject="id,username", roles, exp=3600s)
Jwt --> Handler : token

Handler -> Mapper : toUserView(user)
Mapper --> Handler : UserView

Handler -> Response : write JSON { token, id, userName, fullName }
@enduml
